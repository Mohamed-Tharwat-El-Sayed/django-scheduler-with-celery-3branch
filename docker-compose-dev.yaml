version: '3.8'

services:
  db:
    image: postgres:13.0-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=docker
      - POSTGRES_PASSWORD=Password
      - POSTGRES_DB=dev
    container_name: did_django_schedule_jobs_v2_db

  
  app:
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: always
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./backend/:/usr/src/backend/
    env_file:
      - ./backend/.env
    ports:
      - 8000:8000
    depends_on:
      - db
    container_name: did_django_schedule_jobs_v2_django_app

  redis:
    image: redis:6-alpine
    ports:
      - "6379:6379"
    container_name: did_django_schedule_jobs_v2_redis


  celery_worker:
    restart: always
    build:
      context: ./backend
    command: celery -A did_django_schedule_jobs_v2 worker --loglevel=info --logfile=logs/celery.log
    volumes:
      - ./backend:/usr/src/backend
    env_file:
      - ./backend/.env
    depends_on:
      - db
      - redis
      - app
    container_name: did_django_schedule_jobs_v2_celery_worker

  celery_beat:
    build:
      context: ./backend
    command: celery -A did_django_schedule_jobs_v2 beat -l info
    volumes:
      - ./backend:/usr/src/backend
    env_file:
      - ./backend/.env
    depends_on:
      - db
      - redis
      - app
    container_name: did_django_schedule_jobs_v2_celery_beat

  flower:
    build:
      context: ./backend
    command: celery -A did_django_schedule_jobs_v2 flower  --broker=redis://host.docker.internal:6379//
    ports:
      - 5555:5555
    env_file:
      - ./backend/.env
    depends_on:
      - db
      - app
      - redis
      - celery_worker
    container_name: did_django_schedule_jobs_v2_flower
  
volumes:
  postgres_data: